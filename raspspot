#!/bin/python

from datetime import date, timedelta
from urllib.parse import urlencode
from urllib.request import urlopen
import os, sys

def getday(lat, lon, day, fields):
    source = 'http://rasp.mrsap.org/cgi-bin/get_rasp_blipspot.cgi'
    query = urlencode({'region': 'UK+%d' % day, 'grid': 'd2', 'day': 0,
                       'lat': lat, 'lon': lon, 'linfo': 0,
                       'param': ' '.join(fields)})
    text = urlopen(source + '?' + query).readlines()
    points = zip(*[l.decode().split() for l in text[:len(fields)]])
    data = [dict(zip(fields, p)) for p in points]
    for i, p in enumerate(data):
        p['day']= (date.today() + timedelta(day)).strftime('%A')
        p['time'] = '%02d:00' % (7 + i)
    return data

def getweek(lat, lon, fields):
    return sum([getday(lat, lon, i, fields) for i in range(7)], [])

def usage(argv):
    sys.stderr.write('Usage: %s LAT LON PARAM [PARAM]...\n' \
                       % os.path.basename(argv[0]))
    sys.stderr.write('Try (LAT, LON) = (52.5211, -2.8786) for the Long Mynd\n')
    return 64

def main(argv):
    if len(argv) <= 3:
        return usage(argv)
    try:
        lat, lon = float(argv[1]), float(argv[2])
    except:
        return usage(argv)

    params = argv[3:]
    for p in getweek(lat, lon, params):
        if any(k not in p for k in params):
            continue
        print('%3.3s %s' % (p['day'], p['time']), \
              ' '.join(p[k] for k in params))

if __name__ == '__main__':
    sys.exit(main(sys.argv))
